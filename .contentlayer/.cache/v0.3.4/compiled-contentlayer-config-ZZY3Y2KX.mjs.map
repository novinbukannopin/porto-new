{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import {\r\n  defineDocumentType,\r\n  defineNestedType,\r\n  makeSource,\r\n} from 'contentlayer/source-files';\r\nimport readingTime from 'reading-time';\r\nimport rehypeRaw from 'rehype-raw';\r\nimport remarkGfm from 'remark-gfm';\r\n\r\nconst ReadTime = defineNestedType(() => ({\r\n  name: 'ReadTime',\r\n  fields: {\r\n    text: { type: 'string', required: true },\r\n    minutes: { type: 'number', required: true },\r\n    time: { type: 'number', required: true },\r\n    words: { type: 'number', required: true },\r\n  },\r\n}));\r\n\r\nconst Blog = defineDocumentType(() => ({\r\n  name: 'Blog',\r\n  filePathPattern: 'posts/*.md',\r\n  fields: {\r\n    title: { type: 'string', required: true },\r\n    date: { type: 'string', required: true },\r\n    cover: { type: 'string', required: true },\r\n    thumbnail: { type: 'string' },\r\n    description: { type: 'string' },\r\n    legacyID: { type: 'string' },\r\n    published: { type: 'boolean', required: true },\r\n    tags: { type: 'list', of: { type: 'string' } },\r\n    readTime: {\r\n      type: 'nested',\r\n      of: ReadTime,\r\n    },\r\n    cover_image: { type: 'string' },\r\n  },\r\n  computedFields: {\r\n    readTime: {\r\n      type: 'nested',\r\n      of: ReadTime,\r\n      resolve: (post) => readingTime(post.body.raw),\r\n    },\r\n    id: {\r\n      type: 'string',\r\n      // eslint-disable-next-line no-underscore-dangle\r\n      resolve: (post) => post._raw.sourceFileName.replace(/\\.md$|\\.mdx$/, ''),\r\n    },\r\n  },\r\n}));\r\n\r\nconst Project = defineDocumentType(() => ({\r\n  name: 'Project',\r\n  filePathPattern: 'projects/*.md',\r\n  fields: {\r\n    title: { type: 'string', required: true },\r\n    description: { type: 'string', required: true },\r\n    published: { type: 'boolean' },\r\n    /** will be shown at home */\r\n    highlight: { type: 'boolean' },\r\n    /** shown at project list frontpage */\r\n    featured: { type: 'boolean' },\r\n    sznmApps: { type: 'boolean' },\r\n    stacks: { type: 'list', of: { type: 'string' } },\r\n    date: { type: 'string' },\r\n    projectLink: { type: 'string' },\r\n    repoLink: { type: 'string' },\r\n    appStoreLink: { type: 'string' },\r\n    playStoreLink: { type: 'string' },\r\n    icon: { type: 'string' },\r\n    thumbnail: { type: 'string' },\r\n    thumbnailDark: { type: 'string' },\r\n    projectType: { type: 'string' },\r\n  },\r\n  computedFields: {\r\n    id: {\r\n      type: 'string',\r\n      // eslint-disable-next-line no-underscore-dangle\r\n      resolve: (post) => post._raw.sourceFileName.replace(/\\.md$|\\.mdx$/, ''),\r\n    },\r\n  },\r\n}));\r\n\r\nconst Note = defineDocumentType(() => ({\r\n  name: 'Note',\r\n  filePathPattern: 'notes/*.md',\r\n  fields: {\r\n    title: { type: 'string', required: true },\r\n    description: { type: 'string', required: true },\r\n    published: { type: 'boolean' },\r\n    date: { type: 'string' },\r\n    tags: { type: 'list', of: { type: 'string' } },\r\n  },\r\n  computedFields: {\r\n    id: {\r\n      type: 'string',\r\n      resolve: (note) =>\r\n        // eslint-disable-next-line no-underscore-dangle\r\n        note._raw.sourceFileName.replace(/\\.md$|\\.mdx$/, ''),\r\n    },\r\n  },\r\n}));\r\n\r\nconst Testimony = defineDocumentType(() => ({\r\n  name: 'Testimony',\r\n  filePathPattern: 'testimonies/*.md',\r\n  fields: {\r\n    name: { type: 'string', required: true },\r\n    title: { type: 'string', required: true },\r\n    year: { type: 'string', required: true },\r\n    linkedin: { type: 'string' },\r\n  },\r\n  computedFields: {\r\n    id: {\r\n      type: 'string',\r\n      resolve: (testimony) =>\r\n        // eslint-disable-next-line no-underscore-dangle\r\n        testimony._raw.sourceFileName.replace(/\\.md$|\\.mdx$/, ''),\r\n    },\r\n  },\r\n}));\r\n\r\nconst contentLayerConfig = makeSource({\r\n  contentDirPath: 'content',\r\n  documentTypes: [Blog, Project, Note, Testimony],\r\n  markdown: {\r\n    remarkPlugins: [remarkGfm],\r\n    rehypePlugins: [rehypeRaw],\r\n  },\r\n});\r\n\r\nexport default contentLayerConfig;\r\n"],
  "mappings": "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",
  "names": []
}
